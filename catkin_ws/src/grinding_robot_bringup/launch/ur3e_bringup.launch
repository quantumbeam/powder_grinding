<?xml version="1.0"?>
<launch>
  <arg name="sim" default="false" doc="Simulation flag that launch gazebo or connect real robot." />
  <arg name="debug" default="false" doc="Debug flag that will get passed on to ur_common.launch" />

  <!-- Params for UR hardware -->
  <arg name="robot_ip" default="192.168.56.42" />
  <arg name="reverse_ip" default="" />
  <arg name="reverse_port" default="50001" />
  <arg name="script_sender_port" default="50002" />
  <arg name="trajectory_port" default="50003" />
  <arg name="script_command_port" default="50004" />
  <arg name="tf_prefix" default="" />
  <arg name="kinematics_config" default="$(find grinding_descriptions)/config/ur3e/default_kinematics.yaml" />
  <arg name="use_tool_communication" default="false" />
  <arg name="tool_voltage" default="0" />
  <arg name="tool_parity" default="0" />
  <arg name="tool_baud_rate" default="115200" />
  <arg name="tool_stop_bits" default="1" />
  <arg name="tool_rx_idle_chars" default="1.5" />
  <arg name="tool_tx_idle_chars" default="3.5" />
  <arg name="tool_device_name" default="/tmp/ttyUR" />
  <arg name="tool_tcp_port" default="54321" />
  <arg name="headless_mode" default="false" />
  <arg name="ur_hardware_interface_node_required" default="true" />
  
  <!-- Common Configrations-->
  <arg name="joint_limit_params" default="$(find grinding_descriptions)/config/ur3e/joint_limits.yaml" />
  <arg name="physical_params" default="$(find grinding_descriptions)/config/ur3e/physical_parameters.yaml" />
  <arg name="visual_params" default="$(find grinding_descriptions)/config/ur3e/visual_parameters.yaml" />
  
  <!-- Configrations for  UR hardware -->
  <arg name="robot_description_file" unless="$(arg sim)" default="$(find grinding_descriptions)/launch/load_ur3e.launch.xml" doc="Robot description launch file." />
  <arg name="controller_config_file" unless="$(arg sim)" default="$(find grinding_robot_bringup)/config/ur3e_controllers.yaml" />
  <arg name="controllers" unless="$(arg sim)" default="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller force_torque_sensor_controller robot_status_controller" />
  <arg name="stopped_controllers" unless="$(arg sim)" default="pos_joint_traj_controller joint_group_vel_controller" />
  
  <!-- Configrations for Gazebo -->
  <arg name="robot_description_file" if="$(arg sim)" default="$(find grinding_descriptions)/launch/load_ur3e_gazebo.launch.xml" doc="Robot description launch file." />
  <arg name="controller_config_file" if="$(arg sim)" default="$(find grinding_robot_bringup)/config/ur3e_controllers_gazebo.yaml" />
  <arg name="controllers" if="$(arg sim)" default="joint_state_controller scaled_pos_joint_traj_controller" />
  <arg name="stopped_controllers" if="$(arg sim)" default="pos_joint_traj_controller" />
  
  <arg name="kinematics_params" default="$(find grinding_descriptions)/config/ur3e/default_kinematics.yaml" />
  <arg name="tf_pub_rate" default="500"/>
  <arg name="paused" default="false" doc="Starts Gazebo in paused mode" />
  <arg name="gui" default="true" doc="Starts Gazebo gui" />

  <!-- Configrations for user -->
  <arg name="planning_scene_config"
    default="$(find grinding_motion_routines)/config/UR_grinding_demo/planning_scene_config.yaml" />

  <!-- run the real robot or simulator (gazebo) -->
  <!-- The controllers are fixed real or sim, you can change controllers for your app -->
  <group if="$(arg sim)">
    <include file="$(find ur_gazebo)/launch/ur3e_bringup.launch" pass_all_args="true" />
  </group>
  <group unless="$(arg sim)">
    <include file="$(find ur_robot_driver)/launch/ur_common.launch" pass_all_args="true"/>
  </group>

  <!-- <remap if="$(arg sim)" from="/scaled_pos_joint_traj_controller/follow_joint_trajectory"
    to="/eff_joint_traj_controller/follow_joint_trajectory" /> -->

  <!-- Launch moveit -->
  <include file="$(find ur3e_moveit_config)/launch/move_group.launch">
    <arg name="debug" default="$(arg debug)" />
  </include>

  <!-- launch rviz -->
  <include file="$(find ur3e_moveit_config)/launch/moveit_rviz.launch">
    <param name="config" value="true" />
  </include>

  <!-- load planning scene -->
  <node name="loading_planning_scene" pkg="grinding_motion_routines" type="load_planning_scene.py"
    output="screen">
    <rosparam command="load" file="$(arg planning_scene_config)" />
  </node>

</launch>