<?xml version="1.0"?>
<launch>
  <arg name="sim" default="false" doc="Simulation flag that launch gazebo or conect real robot." />
  <arg name="debug" default="false" doc="Debug flag that will get passed on to ur_common.launch" />
  <arg name="robot_ip" default="192.168.56.42" doc="IP address by which the robot can be reached." />
  <arg name="reverse_ip" default=""
    doc="IP of the driver, if set to empty it will detect it automatically." />
  <arg name="reverse_port" default="50001"
    doc="Port that will be opened by the driver to allow direct communication between the driver and the robot controller." />
  <arg name="script_sender_port" default="50002"
    doc="The driver will offer an interface to receive the program's URScript on this port. If the robot cannot connect to this port, `External Control` will stop immediately." />
  <arg name="trajectory_port" default="50003"
    doc="Port that will be opened by the driver to allow trajectory forwarding." />
  <arg name="script_command_port" default="50004"
    doc="Port that will be opened by the driver to allow forwarding script commands to the robot." />
  <arg name="tf_prefix" default="" doc="tf_prefix used for the robot." />
  <arg name="robot_description_file" default="$(find grinding_descriptions)/launch/load_ur5e.launch"
    doc="Robot description launch file." />
  <arg name="kinematics_config"
    default="$(find grinding_descriptions)/config/ur5e/default_kinematics.yaml"
    doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description." />
  <arg name="use_tool_communication" default="false"
    doc="On e-Series robots tool communication can be enabled with this argument" />
  <arg name="tool_voltage" default="0"
    doc="Tool voltage set at the beginning of the UR program. Only used, when `use_tool_communication` is set to true." />
  <arg name="tool_parity" default="0"
    doc="Parity configuration used for tool communication. Only used, when `use_tool_communication` is set to true." />
  <arg name="tool_baud_rate" default="115200"
    doc="Baud rate used for tool communication. Only used, when `use_tool_communication` is set to true." />
  <arg name="tool_stop_bits" default="1"
    doc="Number of stop bits used for tool communication. Only used, when `use_tool_communication` is set to true." />
  <arg name="tool_rx_idle_chars" default="1.5"
    doc="Number of idle chars in RX channel used for tool communication. Only used, when `use_tool_communication` is set to true." />
  <arg name="tool_tx_idle_chars" default="3.5"
    doc="Number of idle chars in TX channel used for tool communication. Only used, when `use_tool_communication` is set to true." />
  <arg name="tool_device_name" default="/tmp/ttyUR"
    doc="Local device name used for tool communication. Only used, when `use_tool_communication` is set to true." />
  <arg name="tool_tcp_port" default="54321"
    doc="Port on which the robot controller publishes the tool comm interface. Only used, when `use_tool_communication` is set to true." />
  <arg name="headless_mode" default="false"
    doc="Automatically send URScript to robot to execute. On e-Series this does require the robot to be in 'remote-control' mode. With this, the URCap is not needed on the robot." />
  <arg name="ur_hardware_interface_node_required" default="true"
    doc="Shut down ros environment if ur_hardware_interface-node dies." />
  <!-- params for Gazebo -->
  <arg name="joint_limit_params"
    default="$(find grinding_descriptions)/config/ur5e/joint_limits.yaml" />
  <arg name="kinematics_params" default="$(arg kinematics_config)" />
  <arg name="physical_params"
    default="$(find grinding_descriptions)/config/ur5e/physical_parameters.yaml" />
  <arg name="visual_params"
    default="$(find grinding_descriptions)/config/ur5e/visual_parameters.yaml" />

  <!-- run the real robot or simulator (gazebo) -->
  <!-- The controllers are fixed real or sim, you can change controllers for your app -->
  <group if="$(arg sim)">
    <include file="$(find ur_gazebo)/launch/ur5e_bringup.launch" pass_all_args="true">
      <arg name="controller_config_file" value="$(find ur_gazebo)/config/ur5e_controllers.yaml" />
      <arg name="controllers" value="joint_state_controller eff_joint_traj_controller" />
      <arg name="stopped_controllers" value="joint_group_eff_controller" />
    </include>
  </group>
  <group unless="$(arg sim)">
    <include file="$(find ur_robot_driver)/launch/ur_common.launch" pass_all_args="true">
      <arg name="controller_config_file"
        value="$(find ur_robot_driver)/config/ur5e_controllers.yaml" />
      <arg name="controllers"
        value="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller force_torque_sensor_controller robot_status_controller" />
      <arg name="stopped_controllers" value="pos_joint_traj_controller joint_group_vel_controller" />
    </include>
  </group>

  <!-- Launch moveit -->
  <include file="$(find ur5e_moveit_config)/launch/moveit_planning_execution.launch">
    <arg name="sim" default="$(arg sim)" />
    <arg name="debug" default="$(arg debug)" />
  </include>

  <!-- launch rviz -->
  <include file="$(find ur5e_moveit_config)/launch/moveit_rviz.launch">
    <param name="config" value="true" />
  </include>

  <!-- load planning scene -->
  <arg name="planning_scene_config"
    default="$(find grinding_motion_routines)/config/UR_grinding_demo/planning_scene_config.yaml" />
  <node name="ur5e_planning_scene" pkg="grinding_motion_routines" type="load_planning_scene.py"
    output="screen">
    <rosparam command="load" file="$(arg planning_scene_config)" />
  </node>

</launch>